generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  username  String
  createdAt Int
  userId    String     @id @unique
  privacy   Privacy?
  questions Question[]
  discussions Discussion[]
  usages    Usage?
  votes     Vote?
  isPremium Boolean    @default(false)
}

model Question {
  id        String @id @unique @default(cuid())
  question  String @default("")
  answer    String @default("")
  createdAt Int    @default(0)
  repliedAt Int    @default(0)
  user      User   @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId    String
}

model Usage {
  id     String   @id @default(cuid())
  usage  Int      @default(20)
  max    UsageMax @default(FREE)
  user   User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId String   @unique
}

model Privacy {
  collectChat Boolean @default(false)
  autoDelete  Boolean @default(false)
  user        User    @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId      String  @id @unique
}

enum UsageMax {
  FREE
  PREMIUM
}

model Vote {
  id        String  @id @default(cuid())
  count     Int     @default(0)
  lastVote  String  @default("none")
  firstVote String  @default("none")
  allVotes  Json    @default("[]")
  active    Boolean @default(true)
  user      User    @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId    String  @unique
}

model Discussion {
  id        String  @id @default(cuid())
  createdAt Int     @default(0)
  lastMessage Int @default(0)
  messages  Message[]
  userId    String 
  user      User    @relation(fields: [userId], references: [userId], onDelete: Cascade)
}

model Message {
  id        String  @id @default(cuid())
  createdAt Int     @default(0)
  message   String  @default("Lorem imspu mipsu")
  isBot     Boolean @default(false)
  discussion Discussion @relation(fields: [discussionId], references: [id], onDelete: Cascade)
  discussionId String
}